
services:
  chessu_client:
    build:
      context: .
      dockerfile: Dockerfile_client
      args:
        - NEXT_PUBLIC_API_URL=http://192.168.0.222
    expose:
      - "3000"
    labels:
      - nginx.group=client
      - nginx.port=3000
    environment:
        - OTEL_EXPORTER_OTLP_ENDPOINT=grpc://otel-collector:4317
    networks:
      - chessu_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"
  chessu_server:
    build:
      context: .
      dockerfile: Dockerfile_server
    expose:
      - "3001"
    depends_on:
      - db
    environment:
      - CORS_ORIGIN=http://192.168.0.222
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_SERVICE_NAME=chessu
    labels:
      - nginx.group=server
      - nginx.port=3001
    env_file:
      - ./docker/env/server.env
    networks:
      - chessu_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"
  db:
    image: postgres:15
    container_name: db
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    env_file: ./docker/env/db.env
    networks:
      - chessu_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"
  nginx:
    image: nginx:alpine-otel
    container_name: nginx
    expose:
      - "10080"
    ports:
      - "80:80"
    depends_on:
      - chessu_client
      - chessu_server
      - docker-gen
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/nginx/opentelemetry_module.conf:/etc/nginx/conf.d/opentelemetry_module.conf
    networks:
      - chessu_network
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}/{{.ID}}"
  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/default.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - chessu_network
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    user: "0"
    expose:
      - "4317"
      - "4318"
    env_file:
      - ./docker/env/otelcol.env
    volumes:
      - ./docker/otel/otel-config.yml:/etc/otel/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: ["--config", "/etc/otel/config.yml"]
    networks:
      - chessu_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    env_file:
      - ./docker/env/splunk.env
    expose:
      - 8088
    ports:
      - "8000:8000"
    volumes:
      - splunk_var:/opt/splunk/var
      - splunk_etc:/opt/splunk/etc
    networks:
      - chessu_network
  sonar:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_logs:/opt/sonarqube/logs
      - sonar_plugins:/opt/sonarqube/extensions
    networks:
      - chessu_network
  zap:
    image: zaproxy/zap-stable
    container_name: zap
    ports:
      - "8090:8090"
    volumes:
      - ./docker/zap/zap.yaml:/zap/wrk/zap.yaml
      - ./docker/zap/zap-report/:/tmp/zap/
    command: zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -autorun /zap/wrk/zap.yaml
    networks:
      - chessu_network
volumes:
  postgres_data:
  splunk_var:
  splunk_etc:
  sonar_data:
  sonar_logs:
  sonar_plugins:
networks:
  chessu_network:
    driver: bridge
