
services:
  chessu_client:
    build:
      context: .
      dockerfile: Dockerfile_client
      args:
        - NEXT_PUBLIC_API_URL=http://192.168.0.222
    expose:
      - "3000"
    labels:
      - nginx.group=client
      - nginx.port=3000
    networks:
      - chessu_network
  chessu_server:
    build:
      context: .
      dockerfile: Dockerfile_server
    expose:
      - "3001"
    depends_on:
      - db
    environment:
      - CORS_ORIGIN=http://192.168.0.222
    labels:
      - nginx.group=server
      - nginx.port=3001
    env_file:
      - ./docker/env/server.env
    networks:
      - chessu_network
  db:
    image: postgres:15
    container_name: db
    env_file: ./docker/env/db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chessu_network
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - chessu_client
      - chessu_server
      - docker-gen
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - chessu_network
  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  postgres_data:

networks:
  chessu_network:
    driver: bridge
